% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/utils-glm.R
\name{sim_data}
\alias{sim_data}
\title{Simulate outcome data from a GLM design}
\usage{
sim_data(
  data,
  formula,
  beta,
  family = gaussian(),
  which.mu = "mean",
  rng = NULL,
  rng.arg = NULL,
  simulate = TRUE,
  get.lp = TRUE
)
}
\arguments{
\item{data}{A data frame containing predictors.}

\item{formula}{A model formula specifying the linear predictor.}

\item{beta}{A numeric vector of regression coefficients (must match
the design matrix from \code{formula}).}

\item{family}{A GLM family object (e.g., \code{\link[stats:family]{stats::gaussian()}},
\code{\link[stats:family]{stats::binomial()}}, \code{\link[stats:family]{stats::poisson()}}) or a list with elements
\code{family} and \code{linkinv}. Defaults to \code{\link[stats:family]{stats::gaussian()}}.}

\item{which.mu}{Character string naming the argument of the RNG that
corresponds to the mean (\code{"mean"} for Gaussian, \code{"lambda"} for
Poisson, \code{"prob"} for Binomial, etc.).}

\item{rng}{An optional custom random generator function. If \code{NULL},
the default is inferred from the family via \code{\link[=add_rng]{add_rng()}}.}

\item{rng.arg}{A named list of additional arguments to pass to the RNG
(e.g., \code{list(sd = 2)} for Gaussian).}
}
\value{
A copy of \code{data} with an additional column \code{y} containing the
simulated outcome values.
}
\description{
Given a dataset, a model formula, regression coefficients, and a GLM
family, this function simulates response values \code{y} by generating data
from the corresponding distribution.
}
\details{
The function computes the linear predictor \eqn{\eta = X \beta}, applies
the inverse link function to obtain the mean \eqn{\mu}, and then simulates
outcomes using the appropriate RNG. The argument \code{which.mu} is used to map
\eqn{\mu} to the correct argument of the RNG function.

The family object (for the simulation) is not necessary a full family() implementation.
Can be a list with: \code{family = "name"}, \code{linkinv = fun(x)} (the link function),
\code{linkinv = fun(x)} and \code{rng = fun} with the random number generator function.
}
\examples{
set.seed(123)

d <- data.frame(x = rnorm(100))
beta <- c(0, 1)  # intercept = 0, slope = 1

# Gaussian simulation
sim_data(d, y ~ x, beta, family = gaussian(), rng.arg = list(sd = 1))

# Poisson simulation
sim_data(d, y ~ x, beta, family = poisson(), which.mu = "lambda")

# Binomial simulation (Bernoulli trials)
sim_data(d, y ~ x, beta, family = binomial(), which.mu = "prob", rng.arg = list(size = 1))

fam <- list(
  family = "negative.binomial",
  linkfun = function(x) log(x),
  linkinv = function(x) exp(x),
  rng = MASS::rnegbin
  )
sim_data(d, ~ x, beta = c(0.1, 0.5), family = fam, which.mu = "mu", rng.arg = list(theta = 5))


}
