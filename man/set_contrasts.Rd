% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/utils-glm.R
\name{set_contrasts}
\alias{set_contrasts}
\title{Set contrasts for all categorical variables in a data frame}
\usage{
set_contrasts(data, contrasts = contr.treatment)
}
\arguments{
\item{data}{A \code{data.frame} containing the variables to modify.}

\item{contrasts}{Either:
\itemize{
\item A contrast function (default: \link[stats:contrast]{stats::contr.treatment}), applied
to all categorical variables.
\item A named list of contrasts, where names correspond to column names
in \code{data}. Each element can be a contrast function or a contrast matrix.
}}
}
\value{
A \code{data.frame} where all factor or character variables have their
contrasts set according to the specified scheme(s).
}
\description{
Applies a contrast coding scheme to all factor or character variables in
a data frame. By default, treatment contrasts are used, but any valid
contrast function (e.g., \link[stats:contrast]{stats::contr.sum}, \link[stats:contrast]{stats::contr.helmert}) can be
specified. A list of contrasts can also be supplied to set variable-specific
contrast schemes.
}
\examples{
df <- data.frame(
  group = factor(c("A", "B", "A", "C")),
  outcome = rnorm(4)
)

# Apply treatment contrasts to all factors (default)
df_treat <- set_contrasts(df)

# Apply sum contrasts to all factors
df_sum <- set_contrasts(df, contrasts = contr.sum)

# Apply different contrasts per variable
df2 <- data.frame(
  f1 = factor(c("a", "b", "a", "c")),
  f2 = factor(c("x", "x", "y", "z"))
)
df_custom <- set_contrasts(df2, contrasts = list(
  f1 = contr.sum,
  f2 = contr.helmert
))

}
\seealso{
\link[stats:contrast]{stats::contr.treatment}, \link[stats:contrast]{stats::contr.sum}, \link[stats:contrast]{stats::contr.helmert}
}
